<div class="container">
    <div class="row">
        <div class="col-12 my-3 my-lg-5">
            <mat-card>
                <form class="<<M a-a>>-form w-100" [formGroup]="form" (ngSubmit)="onSubmit()">
<<@ F !in f>>
                    <!-- <<f A>> -->

    <<? f tE>>
                    <div class="w-100 mb-3">
                        <hpf-<<f.m a-a>>-select
                            [placeholder]="'<<M a_a>>_placeholder_<<f a_a>>' | translate"
                            [controlName]="'<<f a_a>>'"
                            [formGroup]="form"
                            [(model)]="<<M aA>>.props.<<f a_a>>"<<? f ml>>
                            [multiple]="true"<<?>><<? f nu>>
                            [nullable]="true"<<?>>
                            [errorRequired]="'<<M a_a>>_error_<<f a_a>>_required' | translate">
                        </hpf-<<f.m a-a>>-select>
                    </div>
    <<??>>


                    <<=tagOpen(f)>>

        <<? f tS>>
            <<? f tSt>>
                        <textarea matInput
                                  matTextareaAutosize
                                  [matAutosizeMinRows]="3"
                                  [matAutosizeMaxRows]="12"
                                  placeholder="{{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}"
                                  formControlName="<<f a_a>>"></textarea>
            <<?? f tSr>>
                        <div class="mb-2 tinymce-title" [class.error]="form.controls['<<f a_a>>'].invalid && (form.controls['<<f a_a>>'].dirty || form.controls['<<f a_a>>'].touched)">
                            {{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}
                        </div>
                        <editor [init]="tinyMceConfig()" formControlName="<<f a_a>>"></editor>
            <<??>>
                        <input matInput
                               type="<<? f tSp>>password<<?? f tSe>>email<<??>>text<<?>>"<<? f tSp>> autocomplete="new-password"<<?>>
                               placeholder="{{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}"
                               formControlName="<<f a_a>>">
            <<?>>

        <<?? f tN>>
                        <input matInput
                               type="number"<<? f tNt>> min="-90" max="90"<<?? f tNg>> min="-180" max="180"<<?>>
                               placeholder="{{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}"
                               formControlName="<<f a_a>>">
        <<?? f tD>>
                        <input matInput
                               [matDatepicker]="picker_<<f a_a>>"
                               placeholder="{{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}"
                               formControlName="<<f a_a>>">
                        <mat-datepicker-toggle matSuffix [for]="picker_<<f a_a>>"></mat-datepicker-toggle>
                        <mat-datepicker #picker_<<f a_a>>></mat-datepicker>
        <<?? f tB>>
                        <mat-select placeholder="{{ '<<M a_a>>_placeholder_<<f a_a>>' | translate }}"
                                    formControlName="<<f a_a>>"><<? f nu>>
                            <mat-option [value]="null">-</mat-option><<?>>
                            <mat-option [value]="false">{{ '<<M a_a>>_<<f a_a>>_false' | translate }}</mat-option>
                            <mat-option [value]="true">{{ '<<M a_a>>_<<f a_a>>_true' | translate }}</mat-option>
                        </mat-select>
        <<?>>
                        <mat-error
                                *ngIf="form.controls['<<f a_a>>'].invalid && (form.controls['<<f a_a>>'].dirty || form.controls['<<f a_a>>'].touched)"
                                class="mt-2<<? f tSr>> small<<?>>">
                            <div *ngIf="form.controls['<<f a_a>>'].errors.required">
                                {{ '<<M a_a>>_error_<<f a_a>>_required' | translate }}
                            </div>
                            <div *ngIf="!form.controls['<<f a_a>>'].errors.required">
                                {{ '<<M a_a>>_error_<<f a_a>>_format' | translate }}
                            </div>
                        </mat-error>
                    <<=tagClose(f)>>

    <<?>>
                    <!-- /<<f A>> -->
<<@>>
                    <button class="mt-4" mat-raised-button color="primary" [disabled]="form.invalid">
                        {{ '<<M a_a>>_action_save' | translate }}
                    </button>
                </form>
            </mat-card>
        </div>
    </div>
</div>

<<< 
function tagOpen(f) {
    return f.type === 'string' && f.subtype === 'rich' ?
        '<div class="w-100 mb-3">' : '<mat-form-field class="w-100 mb-3">';
}

function tagClose(f) {
    return f.type === 'string' && f.subtype === 'rich' ?
        '</div>' : '</mat-form-field>';
}
>>>
