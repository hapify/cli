<div *ngIf="formGroup && controlName" [formGroup]="formGroup">
    <mat-form-field class="w-100">
        <mat-select [placeholder]="placeholder"
                    [formControlName]="controlName"
                    [(ngModel)]="model"
                    [multiple]="multiple"
                    (selectionChange)="onChange()"
                    (openedChange)="onOpened($event)"
                    [compareWith]="compareEntities">
<<? F se*lb>>
            <div *ngIf="filterEnabled" class="w-100 mat-option mat-option-disabled bg-accent">
                <i class="material-icons mr-1">search</i>
                <input #filter
                       type="text"
                       matInput
                       placeholder="{{ filterPlaceholder || ('<<M a_a>>_select_filter_placeholder' | translate) }}"
                       [(ngModel)]="searchParams.props.<<@1 F se*lb f>><<f a_a>><<@>>"
                       [ngModelOptions]="{standalone: true}"
                       (keyup)="onFilterChanged()" />
            </div>
<<?>>
            <mat-option *ngIf="nullable && !multiple" [value]="null">{{ nullLabel }}</mat-option>
            <mat-option *ngIf="!loaded" [disabled]="true">
                <mat-progress-bar mode="indeterminate"></mat-progress-bar>
            </mat-option>
            <mat-option *ngFor="let item of items" [value]="item">{{ item.getLabel() }}</mat-option>
        </mat-select>
        <mat-error *ngIf="errorRequired && 
                          formGroup.controls[controlName].invalid && 
                          (formGroup.controls[controlName].dirty || formGroup.controls[controlName].touched)"
                class="mt-2">
            <div *ngIf="formGroup.controls[controlName].errors.required">
                {{ errorRequired }}
            </div>
        </mat-error>
    </mat-form-field>
</div>
<div *ngIf="!(formGroup && controlName)">
    <mat-form-field class="w-100">
        <mat-select [placeholder]="placeholder"
                    [multiple]="multiple"
                    [(ngModel)]="model"
                    (selectionChange)="onChange()"
                    (openedChange)="onOpened($event)"
                    [compareWith]="compareEntities">
<<? F se*lb>>
            <div *ngIf="filterEnabled" class="w-100 mat-option mat-option-disabled bg-accent">
                <i class="material-icons mr-1">search</i>
                <input #filter
                       type="text"
                       matInput
                       placeholder="{{ filterPlaceholder || ('<<M a_a>>_select_filter_placeholder' | translate) }}"
                       [(ngModel)]="searchParams.props.<<@1 F se*lb f>><<f a_a>><<@>>"
                       [ngModelOptions]="{standalone: true}"
                       (keyup)="onFilterChanged()" />
            </div>
<<?>>
            <mat-option *ngIf="nullable && !multiple" [value]="null">{{ nullLabel }}</mat-option>
            <mat-option *ngIf="!loaded" [disabled]="true">
                <mat-progress-bar mode="indeterminate"></mat-progress-bar>
            </mat-option>
            <mat-option *ngFor="let item of items" [value]="item">{{ item.getLabel() }}</mat-option>
        </mat-select>
    </mat-form-field>
</div>