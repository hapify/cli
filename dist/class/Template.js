/*! hapify-cli 2019-03-07 */

"use strict";var __awaiter=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))(function(r,s){function a(t){try{h(i.next(t))}catch(t){s(t)}}function o(t){try{h(i.throw(t))}catch(t){s(t)}}function h(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(a,o)}h((i=i.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const enum_1=require("../enum"),typedi_1=require("typedi"),service_1=require("../service");class Template{constructor(t,e){this.parent=t,this.storageService=typedi_1.Container.get(service_1.TemplatesFileStorageService),e&&this.fromObject(e)}fromObject(t){return this.path=t.path,this.engine=t.engine,this.input=t.input,this.content=t.content,this.contentPath=Template.computeContentPath(this),this}toObject(){return{path:this.path,engine:this.engine,input:this.input,content:this.content}}isEmpty(){return"string"!=typeof this.content||0===this.content.trim().length}needsModel(){return this.input===enum_1.TemplateInput.One}extension(){return Template.computeExtension(this)}channel(){return this.parent}load(){return __awaiter(this,void 0,void 0,function*(){yield this.validate(),this.content=yield this.storageService.get([this.parent.templatesPath,this.contentPath])})}save(){return __awaiter(this,void 0,void 0,function*(){yield this.storageService.set([this.parent.templatesPath,this.contentPath],this.content)})}validate(){return __awaiter(this,void 0,void 0,function*(){if(!(yield this.storageService.exists([this.parent.templatesPath,this.contentPath])))throw new Error(`Template's path ${this.parent.templatesPath}/${this.contentPath} does not exists.`)})}static computeContentPath(t){const e=typedi_1.Container.get(service_1.StringService).variants(Template.defaultFolder),n=Object.keys(e);let i=t.path;for(const t of n)i=i.replace(new RegExp(`{${t}}`,"g"),e[t]);return`${i}.${Template.computeExtension(t)}`}static computeExtension(t){return t.engine===enum_1.TemplateEngine.Hpf?"hpf":"js"}}Template.defaultFolder="model",exports.Template=Template;