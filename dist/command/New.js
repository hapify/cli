/*! hapify-cli 2019-03-02 */

"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(n,o){function s(e){try{a(r.next(e))}catch(e){o(e)}}function c(e){try{a(r.throw(e))}catch(e){o(e)}}function a(e){e.done?n(e.value):new i(function(t){t(e.value)}).then(s,c)}a((r=r.apply(e,t||[])).next())})},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t.default=e,t};Object.defineProperty(exports,"__esModule",{value:!0});const typedi_1=require("typedi"),service_1=require("../service"),helpers_1=require("./helpers"),Fs=__importStar(require("fs")),question_1=require("./question"),SimpleGit=require("simple-git/promise"),options=typedi_1.Container.get(service_1.OptionsService),logger=typedi_1.Container.get(service_1.LoggerService),channelsService=typedi_1.Container.get(service_1.ChannelsService);function NewCommand(e){return __awaiter(this,void 0,void 0,function*(){try{options.setCommand(e);const t={},i={},r=options.dir();if(Fs.readdirSync(r).length)throw new Error("Current folder is not empty, cannot create a new project.");yield question_1.AskProject(e,t),yield question_1.AskBoilerplate(e,i);const n=yield question_1.AskPreset(e);yield question_1.SetupProject(t),yield question_1.FindBoilerplate(i),yield SimpleGit(r).clone(i.url,r),yield channelsService.changeProject(t.id),yield question_1.ApplyPreset(n),logger.success(`Created a new dynamic boilerplate in ${helpers_1.cPath(r)}. Run 'hpf serve' to edit.`),logger.time()}catch(e){logger.handle(e)}})}exports.NewCommand=NewCommand;