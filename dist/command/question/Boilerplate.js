/*! hapify-cli 2019-03-02 */

"use strict";var __awaiter=this&&this.__awaiter||function(e,i,r,t){return new(r||(r=Promise))(function(l,n){function o(e){try{u(t.next(e))}catch(e){n(e)}}function a(e){try{u(t.throw(e))}catch(e){n(e)}}function u(e){e.done?l(e.value):new r(function(i){i(e.value)}).then(o,a)}u((t=t.apply(e,i||[])).next())})},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(i[r]=e[r]);return i.default=e,i};Object.defineProperty(exports,"__esModule",{value:!0});const Inquirer=__importStar(require("inquirer")),typedi_1=require("typedi"),service_1=require("../../service");function AskBoilerplate(e,i){return __awaiter(this,void 0,void 0,function*(){const r=yield typedi_1.Container.get(service_1.BoilerplatesService).collection();if(e.boilerplate)i.slug=e.boilerplate;else if(e.boilerplateId)i.id=e.boilerplateId;else if(e.boilerplateUrl)i.url=e.boilerplateUrl;else{const e=(yield r.list()).map(e=>({name:e.name,value:e.git_url}));i.url=(yield Inquirer.prompt([{name:"url",message:"Choose a boilerplate",type:"list",choices:[{name:"Enter a Git URL",value:null},new Inquirer.Separator,...e],when:()=>e.length>0},{name:"url",message:"Enter boilerplate URL",when:e=>!e.url,validate:e=>e.length>0}])).url}if(!i.id&&!i.slug&&!i.url)throw new Error("No boilerplate is defined")})}function FindBoilerplate(e){return __awaiter(this,void 0,void 0,function*(){const i=yield typedi_1.Container.get(service_1.BoilerplatesService).collection();if(!e.url){let r;if(e.slug?r=yield i.getBySlug(e.slug):e.id&&(r=yield i.get(e.id)),!r)throw new Error("Boilerplate not found");e.url=r.git_url}})}exports.AskBoilerplate=AskBoilerplate,exports.FindBoilerplate=FindBoilerplate;