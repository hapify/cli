/*! hapify-cli 2019-03-11 */

"use strict";var __awaiter=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(n,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){e.done?n(e.value):new i(function(t){t(e.value)}).then(a,s)}l((r=r.apply(e,t||[])).next())})},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t.default=e,t};Object.defineProperty(exports,"__esModule",{value:!0});const Inquirer=__importStar(require("inquirer")),child_process_1=require("child_process"),util=__importStar(require("util")),typedi_1=require("typedi"),service_1=require("../../service"),options=typedi_1.Container.get(service_1.OptionsService);function AskDiff(e,t,i){return __awaiter(this,void 0,void 0,function*(){const e=yield i.branchLocal();t.source=(yield Inquirer.prompt([{name:"source",message:"Choose a source branch",type:"list",choices:e.all,default:"hapify"}])).source;const r=(yield i.log([t.source,"-n","20","--"])).all.map(e=>({name:`[${e.date}] ${e.message}`,value:e.hash}));t.from=(yield Inquirer.prompt([{name:"from",message:"Choose the first commit",type:"list",choices:[{name:"Enter a commit hash",value:null},new Inquirer.Separator,...r],default:r.length>1?r[1].value:null,when:()=>r.length>0},{name:"from",message:"Enter the first commit hash",when:e=>!e.from,validate:e=>e.length>0}])).from,t.to=(yield Inquirer.prompt([{name:"to",message:"Choose the second commit",type:"list",choices:[{name:"Enter a commit hash",value:null},new Inquirer.Separator,...r],default:r.length>0?r[0].value:null,when:()=>r.length>0},{name:"to",message:"Enter the second commit hash",when:e=>!e.to,validate:e=>e.length>0}])).to,t.destination=(yield Inquirer.prompt([{name:"destination",message:"Choose a destination branch",type:"list",choices:e.all,default:"develop"}])).destination})}function ApplyDiff(e,t){return __awaiter(this,void 0,void 0,function*(){const i=`git format-patch --stdout ${e.from}..${e.to} | git am -3 -k`;if((yield Inquirer.prompt([{name:"confirm",message:`Confirm run command: "${i}" on branch ${e.destination}`,type:"confirm",default:!1}])).confirm){yield t.checkout(e.destination);const{stdout:r,stderr:n}=yield util.promisify(child_process_1.exec)(i,{cwd:options.dir()});if(n&&n.length)throw new Error(`${n}\n${r}`);return r}return null})}exports.AskDiff=AskDiff,exports.ApplyDiff=ApplyDiff;